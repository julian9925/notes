{"pageProps":{"note":{"id":"675b8kkz5z5exjtsavxig5r","title":"classConstructor","desc":"","updated":1697447867473,"created":1697447546622,"custom":{},"fname":"Javascript.vanilla.classConstructor","type":"note","vault":{"fsPath":".","selfContained":true,"name":"docs"},"contentHash":"965fa4449f2eeb0915ecc80127943d74","links":[{"type":"wiki","from":{"fname":"Javascript.vanilla.classConstructor","id":"675b8kkz5z5exjtsavxig5r","vaultName":"docs"},"value":"tags.javascript","alias":"#javascript","position":{"start":{"line":66,"column":1,"offset":1468},"end":{"line":66,"column":12,"offset":1479},"indent":[]},"xvault":false,"to":{"fname":"tags.javascript"}}],"anchors":{"javascript-class-do-what":{"type":"header","text":"Javascript class do what","value":"javascript-class-do-what","line":8,"column":0,"depth":1}},"children":[],"parent":"4qy6bnrl5zfggy2bvjukgqu","data":{}},"body":"<h1 id=\"classconstructor\">classConstructor<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#classconstructor\"></a></h1>\n<h1 id=\"javascript-class-do-what\">Javascript class do what<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#javascript-class-do-what\"></a></h1>\n<p>預期這段會執行什麼？</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">b</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> proto1 <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>new 做了什麼事情</p>\n<ul>\n<li><strong>創建一個新的物件</strong>：new 運算符創建一個全新的、空的 JavaScript 物件 {} 實體。</li>\n<li><strong>設定原型</strong>：新物件的 Prototype（一個隱藏的內部屬性）被設定為物件的原型屬性。換句話說，新物件從建構函數的原型中繼承。</li>\n<li><strong>執行建構函數</strong>：帶有指定參數的建構函數（例如 new f() 中的 f）被調用，並將 this 設定為新創建的物件。這一步是物件初始化的地方，可以添加屬性，附加方法等等。</li>\n<li><strong>返回創建的物件</strong>：如果建構函數沒有顯式地返回一個物件（return { /<em>...</em>/ }），那麼由 new 創建的新物件將自動被返回。然而，如果建構函數確實返回一個物件，則將返回該物件，而不是新創建的物件。</li>\n</ul>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function-variable function\">f</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">b</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> proto1 <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> proto1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">.</span><span class=\"token property-access\">__proto__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPrototypeOf</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getPrototypeOf</span><span class=\"token punctuation\">(</span>proto1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>物件本身沒有 prototype 屬性，只有函數有 prototype</p>\n<p>在 JavaScript 中實現了「第一類函數」（First-Class Function）的特性，這意味著函數可以作為參數傳遞給其他函數，可以從其他函數返回，也可以被賦值給變量，或者作為物件的屬性。函數還有一些其他的特性，比如擁有一個 prototype 屬性（只有函數才有這個屬性），可以被用作建構函數來創建新的物件</p>\n<p>在 JavaScript 中，函數也是物件，所以 Object 事實上就是一個特殊的函數，可以用來創建新的物件或者返回已經存在的物件的參考。由於 Object 是一個函數，它自然地擁有 prototype 屬性。這個 prototype 屬性是一個物件，包含了所有由 Object 建構函數創建的物件所繼承的屬性和方法，如 Object.prototype.hasOwnProperty、Object.prototype.toString 等。</p>\n<p>最安全的繼承方法</p>\n<pre><code>let SuperClass = function() {\n    this.a = 1;\n    this.b = 2;\n}\n\nlet SubClass = function() {\n    superClass.call(this);\n}\n\nSubClass.prototype = Object.create(SuperClass.prototype);\nSubClass.prototype.constructor = SubClass;\n\n</code></pre>\n<p><img src=\"/notes/assets/prototype_chain.drawio.png\"></p>\n<p><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">#javascript (Private)</a></p>","noteIndex":{"id":"0uuk3cixqkxat0xqh4cm542","title":"Welcome to Juian's Note","desc":"","updated":1697115192196,"created":1697115085580,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"docs"},"contentHash":"74034c389dde315161eef9d04fe474ed","links":[],"anchors":{"lookup":{"type":"header","text":"Lookup","value":"lookup","line":17,"column":0,"depth":2}},"children":["eaontip9ou4hzx32etylyya","f5344ht8bfoy774cvv27mgm","34fsdv2g735xufqoqfru1bq","aqjly8hefz09duquoig0ssv"],"parent":null,"data":{},"body":"\nThis is my personal knowledge base. It is built using [Dendron](https://wiki.dendron.so/).\n\n這會是中英文夾雜的知識庫\n\n包含\n - 一些讀書心得\n - 一些個人筆記\n - 一些 leetcode 的解題心得\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"docs"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","theme":"dark","assetsPrefix":"/notes","siteUrl":"https://julian9925.github.io","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}